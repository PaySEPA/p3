/*
 * Copyright (c) 2012 Digital Bazaar, Inc. All rights reserved.
 */
var async = require('async');
var payswarm = {
  config: require('payswarm.config'),
  db: require('payswarm.database'),
  identity: require('payswarm.identity'),
  logger: require('payswarm.logger'),
  permission: require('payswarm.permission'),
  profile: require('payswarm.profile'),
  security: require('payswarm.security'),
  // financial sub modules
  account: require('payswarm.account'),
  budget: require('payswarm.budget'),
  contract: require('payswarm.contract'),
  deposit: require('payswarm.deposit'),
  paymentToken: require('payswarm.paymentToken'),
  transaction: require('payswarm.transfer'),
  transfer: require('payswarm.transfer'),
  withdrawal: require('payswarm.withdrawal')
};

// constants
var MODULE_TYPE = 'payswarm.financial';
var MODULE_IRI = 'https://payswarm.com/modules/financial';

// module permissions
var PERMISSIONS = {
  // account permissions
  ACCOUNT_ADMIN: MODULE_IRI + '#account_admin',
  ACCOUNT_ACCESS: MODULE_IRI + '#account_access',
  ACCOUNT_CREATE: MODULE_IRI + '#account_create',
  ACCOUNT_EDIT: MODULE_IRI + '#account_edit',
  ACCOUNT_REMOVE: MODULE_IRI + '#account_remove',
  // budget permissions
  BUDGET_ADMIN: MODULE_IRI + '#budget_admin',
  BUDGET_ACCESS: MODULE_IRI + '#budget_access',
  BUDGET_CREATE: MODULE_IRI + '#budget_create',
  BUDGET_EDIT: MODULE_IRI + '#budget_edit',
  BUDGET_REMOVE: MODULE_IRI + '#budget_remove',
  // payment token permissions
  PTOKEN_ADMIN: MODULE_IRI + '#payment_token_admin',
  PTOKEN_ACCESS: MODULE_IRI + '#payment_token_access',
  PTOKEN_CREATE: MODULE_IRI + '#payment_token_create',
  PTOKEN_EDIT: MODULE_IRI + '#payment_token_edit',
  PTOKEN_REMOVE: MODULE_IRI + '#payment_token_remove'
};

// module API
var api = {};
api.name = MODULE_TYPE + '.Financial';
module.exports = payswarm.tools.extend(
  api,
  // sub modules
  payswarm.account,
  payswarm.budget,
  payswarm.paymentToken,
  payswarm.contract,
  payswarm.deposit,
  payswarm.transfer,
  payswarm.withdrawal
);

/**
 * Initializes this module.
 *
 * @param app the application to initialize this module for.
 * @param callback(err) called once the operation completes.
 */
api.init = function(app, callback) {
  // do initialization work
  async.waterfall([
    _registerPermissions,
    payswarm.account.init,
    payswarm.budget.init,
    payswarm.paymentToken.init,
    payswarm.contract.init,
    payswarm.deposit.init,
    payswarm.transfer.init,
    payswarm.withdrawal.init
  ], callback);
};

/**
 * Registers the permissions for this module.
 *
 * @param callback(err) called once the operation completes.
 */
function _registerPermissions(callback) {
  var permissions = [{
    '@id': PERMISSIONS.ACCOUNT_ADMIN,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Account Administration',
    'rdfs:comment': 'Required to administer Accounts.'
  }, {
    '@id': PERMISSIONS.ACCOUNT_ACCESS,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Access Account',
    'rdfs:comment': 'Required to access an Account.'
  }, {
    '@id': PERMISSIONS.ACCOUNT_CREATE,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Create Account',
    'rdfs:comment': 'Required to create an Account.'
  }, {
    '@id': PERMISSIONS.ACCOUNT_EDIT,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Edit Account',
    'rdfs:comment': 'Required to edit an Account.'
  }, {
    '@id': PERMISSIONS.ACCOUNT_REMOVE,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Remove Account',
    'rdfs:comment': 'Required to remove an Account.'
  }, {
    '@id': PERMISSIONS.BUDGET_ADMIN,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Budget Administration',
    'rdfs:comment': 'Required to administer Budgets.'
  }, {
    '@id': PERMISSIONS.BUDGET_ACCESS,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Access Budget',
    'rdfs:comment': 'Required to access a Budget.'
  }, {
    '@id': PERMISSIONS.BUDGET_CREATE,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Create Budget',
    'rdfs:comment': 'Required to create a Budget.'
  }, {
    '@id': PERMISSIONS.BUDGET_EDIT,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Edit Budget',
    'rdfs:comment': 'Required to edit a Budget.'
  }, {
    '@id': PERMISSIONS.BUDGET_REMOVE,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Remove Budget',
    'rdfs:comment': 'Required to remove a Budget.'
  }, {
    '@id': PERMISSIONS.PTOKEN_ADMIN,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Payment Token Administration',
    'rdfs:comment': 'Required to administer Payment Tokens.'
  }, {
    '@id': PERMISSIONS.PTOKEN_ACCESS,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Access Payment Token',
    'rdfs:comment': 'Required to access a Payment Token.'
  }, {
    '@id': PERMISSIONS.PTOKEN_CREATE,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Create Payment Token',
    'rdfs:comment': 'Required to create a Payment Token.'
  }, {
    '@id': PERMISSIONS.PTOKEN_EDIT,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Edit Payment Token',
    'rdfs:comment': 'Required to edit a Payment Token.'
  }, {
    '@id': PERMISSIONS.PTOKEN_REMOVE,
    'psa:module': MODULE_IRI,
    'rdfs:label': 'Remove Payment Token',
    'rdfs:comment': 'Required to remove a Payment Token.'
  }];
  async.forEach(permissions, function(p, callback) {
    payswarm.permission.registerPermission(p, callback);
  }, callback);
}
